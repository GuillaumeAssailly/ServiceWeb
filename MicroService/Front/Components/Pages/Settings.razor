@inject HttpClient _HttpClient
@inject NavigationManager NavigationManager
@inject SettingsService SettingsService

@page "/settings"
@using Newtonsoft.Json
@using System.Net

<style>
    * {
        list-style-type: none;
        padding: 0; 
    }
</style>

<h1>Settings</h1>
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <AuthorizeView Roles="Admin">
                <Authorized>
                    
                        @if (SettingsService.Users != null && SettingsService.Users.Any())
                        {
                            <h3>User List</h3>
                            <ul class="list-group">
                                @foreach (var user in SettingsService.Users)
                                {
                                    <li class="list-group-item">
                                        Id: @user.Id, Name: @user.Name, eMail: @user.Email
                                        <button class="btn btn-danger btn-sm float-end" @onclick="() => deleteUser(user.Id)">Delete</button>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted">No users found.</p>
                        }
                        <br/>


                    
                        @if (SettingsService.AllHistory != null)
                        {
                            <h3>History of all games : </h3>
                            <ul class="list-group">
                                @foreach (var entry in SettingsService.AllHistory)
                                {
                                    <li class="list-group-item">
                                        Id: @entry.Id, UserId: @entry.UserId
                                        <ul>
                                            @foreach (var element in entry.Path)
                                            {
                                                <li>@element</li>
                                            }
                                        </ul>
                                        Temps: @entry.Timestamp
                                        <button class="btn btn-danger btn-sm float-end" @onclick="() => deleteEntry(entry.Id)">Delete</button>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted">No game could be found.</p>
                        }
                   
                </Authorized>
                <NotAuthorized>
                    <p class="text-danger">You need some privileges to view this.</p>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</div>



@code {
    private bool IsUserListVisible = false;
    private bool IsHistoryVisible = false;
    private bool IsAllHistoryVisible = false;

    protected override async Task OnInitializedAsync()
    {
        await SettingsService.getUserList();
        await SettingsService.getHistory();
        await SettingsService.getAllHistory();
    }


    private void ToggleUserList()
    {
        IsUserListVisible = !IsUserListVisible;
    }
    private void ToggleHistory()
    {
        IsHistoryVisible = !IsHistoryVisible;
    }
    private void ToggleAllHistory()
    {
        IsAllHistoryVisible = !IsAllHistoryVisible;
    }

    private async Task deleteUser(int id)
    {
        await SettingsService.deleteUser(id);
    }

    private async Task deleteEntry(int id)
    {
        await SettingsService.deleteEntry(id);
    }




}
