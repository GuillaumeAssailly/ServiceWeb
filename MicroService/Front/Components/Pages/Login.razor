@page "/login"
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject LoginService loginService
@inject AuthenticationStateProvider authStateProvider


@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

    <InputText @bind-Value="loginModel.Username" placeholder ="Nom d'utilisateur" />
    <InputText @bind-Value="loginModel.Password" type="password" placeholder="Mot de passe" @onkeyup="HandleKeyUp" />
    <button @onclick="HandleLogin">Login</button>

    


@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = "";

    private async void HandleLogin()
    {
        var user = loginService.AuthenticateUser(loginModel.Username, loginModel.Password).Result;
        if (user != null)
        {
            var userClaim = await ((CustomAuthenticationStateProvider)authStateProvider).MarkUserAsAuthenticated(user);

            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Échec de l'authentification. Vérifiez votre nom d'utilisateur et votre mot de passe.";
        }
    }

    private class LoginModel
    {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
    }

    private async Task HandleKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            HandleLogin();
        }
    }
}
